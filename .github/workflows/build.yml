name: Financial Reporting Service

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ebpf-runners-cicd
    steps:
      - uses: actions/checkout@v3

      - name: Check Environment
        run: |
          echo "Checking kernel version:"
          uname -r
          echo "Checking system architecture:"
          uname -m
          echo "Checking Docker availability:"
          docker --version || echo "Docker not available"

      - name: Download kntrl (arm64)
        run: |
          echo "Downloading kntrl binary for arm64 architecture..."
          curl -L -o kntrl https://github.com/kondukto-io/kntrl/releases/download/v0.1.3/kntrl_arm64.arm64
          chmod +x kntrl
          sudo mv kntrl /usr/local/bin/kntrl
          echo "kntrl binary installed to /usr/local/bin/kntrl"

      - name: Increase MEMLOCK limit
        run: |
          # Increase the memlock limit for the current session
          sudo sh -c "ulimit -l unlimited"
          # Check current limits
          ulimit -a

      - name: Start kntrl agent (Binary approach)
        run: |
          echo "Starting kntrl agent in monitor mode using binary..."
          sudo /usr/local/bin/kntrl run --mode=monitor \
            --allowed-hosts=kondukto.io,${{ env.GITHUB_ACTIONS_URL }} \
            --allow-local-ranges=true \
            --verbose &
          
          # Wait to ensure kntrl has time to start
          sleep 5
          echo "kntrl agent started in background."

      - name: Secured Build
        run: |
          echo "Secure financial reporting service build on this runner"
          hostname
          env
          ls -la

  malicious-build:
    runs-on: ebpf-runners-cicd
    steps:
      - uses: actions/checkout@v3

      - name: Check Environment
        run: |
          echo "Checking kernel version:"
          uname -r
          echo "Checking system architecture:"
          uname -m

      - name: Download kntrl (arm64)
        run: |
          echo "Downloading kntrl binary for arm64 architecture..."
          curl -L -o kntrl https://github.com/kondukto-io/kntrl/releases/download/v0.1.3/kntrl_arm64.arm64
          chmod +x kntrl
          sudo mv kntrl /usr/local/bin/kntrl
          echo "kntrl binary installed to /usr/local/bin/kntrl"

      - name: Increase MEMLOCK limit
        run: |
          # Increase the memlock limit for the current session
          sudo sh -c "ulimit -l unlimited"
          # Check current limits
          ulimit -a

      - name: Start kntrl agent (Binary approach - Prevent Mode)
        run: |
          echo "Starting kntrl agent in prevent mode using binary..."
          sudo /usr/local/bin/kntrl run --mode=trace \
            --allowed-hosts=kondukto.io,${{ env.GITHUB_ACTIONS_URL }} \
            --allow-local-ranges=true \
            --verbose &
          
          # Wait to ensure kntrl has time to start
          sleep 5
          echo "kntrl agent started in background with prevention enabled."

      - name: Simulate Malicious Actions
        run: |
          echo "Simulating malicious build trying to gain access..."
          hostname
          env
          ls -la /etc/shadow # Attempt to access a sensitive file
          mkdir /tmp/evil_dir
          echo "Malicious file created" > /tmp/evil_dir/malicious.txt
          curl -m 10 http://unauthorized-site.example.com # Attempt to connect to an external site
          echo "Attempted malicious actions."

      - name: Check kntrl Logs
        if: always()
        run: |
          echo "Checking kntrl logs..."
          if [ -f /tmp/kntrl.out ]; then
            cat /tmp/kntrl.out
          else
            echo "kntrl log file not found, checking default log location."
            sudo cat /tmp/kntrl.out || echo "No logs found in default location."
          fi