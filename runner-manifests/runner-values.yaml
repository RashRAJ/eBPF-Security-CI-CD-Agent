githubConfigUrl: "https://github.com/${GITHUB_OWNER}/${GITHUB_REPO}"
githubConfigSecret:
  github_token: "${GITHUB_TOKEN}"

# Comment out containerMode to avoid conflicts with explicit container definitions
# containerMode:
#   type: dind

maxRunners: 5
minRunners: 1

# Template configuration with kntrl security and explicit DIND setup
template:
  spec:
    # Set privileged mode at pod level
    securityContext:
      privileged: true
    
    # Explicitly define all containers including DIND setup
    initContainers:
      - name: init-dind-externals
        image: ghcr.io/actions/actions-runner:latest
        command: ["cp", "-r", "/home/runner/externals/.", "/home/runner/tmpDir/"]
        volumeMounts:
          - name: dind-externals
            mountPath: /home/runner/tmpDir
    
    containers:
      # Runner container
      - name: runner
        image: ghcr.io/actions/actions-runner:latest
        command: ["/home/runner/run.sh"]
        env:
          - name: DOCKER_HOST
            value: unix:///var/run/docker.sock
        volumeMounts:
          - name: work
            mountPath: /home/runner/_work
          - name: dind-sock
            mountPath: /var/run
      
      # DIND container
      - name: dind
        image: docker:dind
        args:
          - dockerd
          - --host=unix:///var/run/docker.sock
          - --group=1000
        securityContext:
          privileged: true
        volumeMounts:
          - name: work
            mountPath: /home/runner/_work
          - name: dind-sock
            mountPath: /var/run
          - name: dind-externals
            mountPath: /home/runner/externals
      
      # kntrl monitor container
      - name: kntrl-monitor
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Setting up kntrl security agent..."
            # Download kntrl binary for arm64
            wget -q -O /kntrl https://github.com/kondukto-io/kntrl/releases/download/v0.1.3/kntrl_arm64.arm64
            chmod +x /kntrl
            
            # Set unlimited memlock limit
            ulimit -l unlimited
            
            # Start kntrl in monitor mode
            /kntrl run --mode=monitor \
              --allowed-hosts=github.com,api.github.com,*.github.io,*.githubusercontent.com \
              --allow-local-ranges=true \
              --verbose > /tmp/kntrl.log 2>&1 &
            
            echo "kntrl started in monitor mode, tailing logs..."
            # Keep container running and tail logs
            tail -f /tmp/kntrl.log || sleep infinity
        volumeMounts:
          - name: sys-kernel-debug
            mountPath: /sys/kernel/debug
          - name: lib-modules
            mountPath: /lib/modules
            readOnly: true
          - name: dind-sock
            mountPath: /var/run
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
              - NET_ADMIN
              - SYS_PTRACE
              - NET_RAW
    
    # Define all required volumes
    volumes:
      - name: work
        emptyDir: {}
      - name: dind-sock
        emptyDir: {}
      - name: dind-externals
        emptyDir: {}
      - name: sys-kernel-debug
        hostPath:
          path: /sys/kernel/debug
      - name: lib-modules
        hostPath:
          path: /lib/modules